{"version":3,"sources":["services/api.js","services/storage.js","components/CharacterCard.js","components/CharacterList.js","components/NameFilter.js","components/CharacterDetail.js","components/Warning.js","components/App.js","index.js"],"names":["getApiData","fetch","then","res","json","data","results","map","character","id","name","image","specie","species","status","location","episodes","episode","length","localObject","get","key","defaultData","JSON","parse","localStorage","getItem","set","setItem","stringify","CharacterCard","props","to","className","src","alt","CharacterList","renderCharacters","characters","NameFilter","onSubmit","e","preventDefault","htmlFor","type","placeholder","value","onChange","ev","ls","target","handleFilter","CharacterDetail","title","Warning","App","useState","setCharacters","filterName","setFilterName","useEffect","orderedData","sort","a","b","filteredCharacters","filter","toLowerCase","includes","exact","path","undefined","component","routerProps","matchId","match","params","characterId","foundCharacter","find","parseInt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55b5191c.chunk.js","sourcesContent":["const getApiData = () => {\r\n  return fetch('https://rickandmortyapi.com/api/character')\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          image: character.image,\r\n          specie: character.species,\r\n          status: character.status,\r\n          location: character.location.name,\r\n          episodes: character.episode.length,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default getApiData;\r\n","const get = (key, defaultData) => {\r\n  const data = JSON.parse(localStorage.getItem(key));\r\n  return data === null ? defaultData : data;\r\n};\r\n\r\nconst set = (key, data) => {\r\n  localStorage.setItem(key, JSON.stringify(data));\r\n};\r\n\r\nconst localObject = {\r\n  get: get,\r\n  set: set,\r\n};\r\nexport default localObject;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <>\r\n      <Link to={`/character/${props.character.id}`}>\r\n        <img\r\n          className='list_item--img'\r\n          src={props.character.image}\r\n          alt={props.character.name}\r\n        />\r\n        <h2 className='list_item--name'>{props.character.name}</h2>\r\n        <p className='list_item--specie'>{props.character.specie}</p>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import React from 'react';\r\nimport CharacterCard from './CharacterCard';\r\n\r\nconst CharacterList = (props) => {\r\n  const renderCharacters = props.characters.map((character) => {\r\n    return (\r\n      <li key={character.id} className='list_item'>\r\n        <CharacterCard character={character} />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className='list'>{renderCharacters}</ul>;\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from 'react';\r\nimport ls from '../services/storage';\r\n\r\nconst NameFilter = (props) => {\r\n  const handleChange = (ev) => {\r\n    ev.preventDefault();\r\n    ls.set('filterName', ev.target.value);\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: 'name',\r\n    });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={submitHandler} className='form'>\r\n        <label className='form_label' htmlFor='name'>\r\n          Busca un personaje:\r\n        </label>\r\n        <input\r\n          className='form_input'\r\n          type='text'\r\n          name='name'\r\n          id='name'\r\n          placeholder='Rick...'\r\n          value={props.value}\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NameFilter;\r\n","import React from 'react';\r\n\r\nconst CharacterDetail = (props) => {\r\n  let status;\r\n  if (props.character.status === 'Alive') {\r\n    status = <i className='fas fa-hand-spock detail_data--icon'></i>;\r\n  } else if (props.character.status === 'unknown') {\r\n    status = <i className='fas fa-question detail_data--icon'></i>;\r\n  } else {\r\n    status = <i className='fas fa-skull-crossbones detail_data--icon'></i>;\r\n  }\r\n\r\n  let specie;\r\n  if (props.character.specie === 'Alien') {\r\n    specie = <i className='fab fa-reddit-alien detail_data--icon'></i>;\r\n  } else {\r\n    specie = <i className='fas fa-male detail_data--icon'></i>;\r\n  }\r\n  return (\r\n    <div className='detail_main'>\r\n      <div className='detail'>\r\n        <img\r\n          className='detail_img'\r\n          src={props.character.image}\r\n          alt={props.character.name}\r\n          title={props.character.name}\r\n        />\r\n        <div className='detail_data'>\r\n          <h1 className='detail_data--name'>{props.character.name}</h1>\r\n          <p>\r\n            <strong>Especie:</strong> {specie}\r\n          </p>\r\n          <p>\r\n            <strong>Planeta:</strong> {props.character.location}\r\n          </p>\r\n          <p>\r\n            <strong>Episodios:</strong> {props.character.episodes}\r\n          </p>\r\n          <p>\r\n            <strong>Estado:</strong> {status}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import React from 'react';\r\n\r\nconst Warning = (props) => {\r\n  return (\r\n    <div className='warning'>\r\n      <h3>No hay ningún personaje que coincida con la búsqueda</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Warning;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n//styles\r\nimport '../styles/App.scss';\r\n//services\r\nimport getApiData from '../services/api';\r\nimport ls from '../services/storage';\r\n//components\r\nimport CharacterList from './CharacterList';\r\nimport NameFilter from './NameFilter';\r\nimport CharacterDetail from './CharacterDetail';\r\nimport Warning from './Warning';\r\n\r\nfunction App() {\r\n  const [characters, setCharacters] = useState([]);\r\n  const [filterName, setFilterName] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (characters.length === 0) {\r\n      getApiData().then((data) => {\r\n        const orderedData = data.sort((a, b) =>\r\n          a.name > b.name ? 1 : a.name < b.name ? -1 : 0\r\n        );\r\n        setCharacters(orderedData);\r\n      });\r\n    }\r\n  }, [characters.length]);\r\n\r\n  useEffect(() => {\r\n    ls.set('characters', characters);\r\n  }, [characters]);\r\n\r\n  useEffect(() => {\r\n    ls.set('filterName', filterName);\r\n  }, [filterName]);\r\n\r\n  const handleFilter = (data) => {\r\n    setFilterName(data.value);\r\n    ls.set('filterName', data.value);\r\n  };\r\n\r\n  const filteredCharacters = characters.filter((character) => {\r\n    return character.name.toLowerCase().includes(filterName.toLowerCase());\r\n  });\r\n\r\n  const renderCharacterDetail = (routerProps) => {\r\n    const matchId = routerProps.match.params.characterId;\r\n    const foundCharacter = characters.find(\r\n      (character) => character.id === parseInt(matchId)\r\n    );\r\n    if (foundCharacter !== undefined) {\r\n      return <CharacterDetail character={foundCharacter} />;\r\n    } else {\r\n      return <Warning />;\r\n    }\r\n  };\r\n\r\n  const renderListOrWarning = () => {\r\n    if (characters !== undefined) {\r\n      return <CharacterList characters={filteredCharacters} />;\r\n    } else {\r\n      return <Warning />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='main'>\r\n      <Switch>\r\n        <Route exact path='/'>\r\n          <h1 className='main_title'>Rick and Morty</h1>\r\n          <NameFilter handleFilter={handleFilter} value={filterName} />\r\n          {renderListOrWarning()}\r\n        </Route>\r\n        <Route\r\n          path='/character/:characterId'\r\n          component={renderCharacterDetail}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}